name: Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run tests
        run: npm test
  
  deploy-backend:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          
      - name: Install AWS SAM CLI
        run: |
          pip install aws-sam-cli
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Deploy and verify backend
        run: |
          cd infrastructure/sam
          sam build
          sam deploy --stack-name doc-tales-dev --no-confirm-changeset --parameter-overrides Environment=dev --region us-east-1
          cd ../../
          ./deploy-and-verify.sh
        env:
          SAM_CLI_TELEMETRY: 0

  deploy-frontend:
    needs: deploy-backend
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build frontend
        run: npm run build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Get API endpoint
        id: get-api-endpoint
        run: |
          API_ENDPOINT=$(aws cloudformation describe-stacks --stack-name doc-tales-dev --query "Stacks[0].Outputs[?OutputKey=='ApiEndpoint'].OutputValue" --output text --region us-east-1)
          echo "API_ENDPOINT=$API_ENDPOINT" >> $GITHUB_ENV
          echo "API_ENDPOINT=$API_ENDPOINT" >> $GITHUB_OUTPUT
        
      - name: Update frontend configuration
        run: |
          echo "REACT_APP_API_ENDPOINT=${{ env.API_ENDPOINT }}" > .env.production
          
      - name: Deploy frontend to S3
        run: |
          # Create S3 bucket for frontend if it doesn't exist
          aws s3api head-bucket --bucket doc-tales-frontend-dev || aws s3 mb s3://doc-tales-frontend-dev --region us-east-1
          
          # Configure bucket for static website hosting
          aws s3 website s3://doc-tales-frontend-dev --index-document index.html --error-document index.html
          
          # Upload build files to S3
          aws s3 sync build/ s3://doc-tales-frontend-dev --delete
          
          # Make all objects public
          aws s3api put-bucket-policy --bucket doc-tales-frontend-dev --policy '{
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "PublicReadGetObject",
                "Effect": "Allow",
                "Principal": "*",
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::doc-tales-frontend-dev/*"
              }
            ]
          }'
          
          # Output the website URL
          echo "Frontend deployed to: http://doc-tales-frontend-dev.s3-website-us-east-1.amazonaws.com"
